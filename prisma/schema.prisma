generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  image     String
  currentTrack Track? @relation("currentTrack",fields: [currentTrackId], references: [id])
  currentTrackId String? @unique
  currentTopic Topic? @relation("currentTopic",fields: [currentTopicId], references: [id])
  currentTopicId String? @unique
  currentTask Task? @relation("currentTask",fields: [currentTaskId], references: [id])
  currentTaskId String? @unique
  tracks    Track[]     @relation("userTracks")
}

model Track {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  completed Boolean
  user      User @relation("userTracks",fields: [userId], references: [id])
  userId    String
  topics    Topic[]
  resources Resource[]
  userCurrentTrack  User? @relation("currentTrack")
}

model Topic {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  completed Boolean
  track     Track @relation(fields: [trackId], references: [id])
  trackId   String
  tasks     Task[]
  userCurrentTopic  User?  @relation("currentTopic") 
}

model Task {   
  id        String @id @default(uuid())   
  createdAt DateTime @default(now())   
  updatedAt DateTime @updatedAt   
  name      String   
  deadline  DateTime    
  topic     Topic @relation(fields: [topicId], references: [id])   
  topicId   String   
  description String?   
  priority  Boolean @default(false)   
  completed Boolean @default(false)   
  timeSpentInMinutes Int @default(0)
  userCurrentTask   User? @relation("currentTask")
}

model Resource {
    id          String @id @default(uuid())
    track Track @relation(fields: [trackId], references: [id]) 
    trackId     String
} 